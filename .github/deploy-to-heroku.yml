name: Test, Build and Push Docker Image to Heroku

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  SECRET_KEY: "${{ secrets.SECRET_KEY }}"
  DEBUG: "${{ secrets.DEBUG }}"
  PAULSOFT_EMAIL_USER: "${{ secrets.PAULSOFT_EMAIL_USER }}"
  PAULSOFT_EMAIL_PASSWORD: "${{ secrets.PAULSOFT_EMAIL_PASSWORD }}"
  DATABASE_URL: "${{ secrets.DATABASE_URL }}"
  IMAGE_NAME: gradesappapi
  HEROKU_API_KEY: "${{ secrets.HEROKU_API_KEY }}"
  ALLOWED_HOSTS: "${{ secrets.ALLOWED_HOSTS }}"
  CORS_ALLOWED_ORIGINS: "${{ secrets.CORS_ALLOWED_ORIGINS }}"
  EMAIL_VERIFICATION_URL: "${{ secrets.EMAIL_VERIFICATION_URL }}"
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
  push:    
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      # - name: Build image
      #   run: docker build . -f ./Dockerfile --tag $IMAGE_NAME

      # - name: Log into GitHub Container Registry
      #   run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ secrets.CR_USERNAME }} --password-stdin

      # - name: Push image to GitHub Container Registry
      #   run: |
      #     IMAGE_ID=ghcr.io/TheRealPaulSoftInc/$IMAGE_NAME
      #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      #     [ "$VERSION" == "master" ] && VERSION=latest
      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION
      #     docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION
      #         # Push the Docker image to Heroku Container Registry
      #     docker logout https://ghcr.io
      - name: Login to Heroku
        run: docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
      - name: Build and Push image to Heroku
        run: |
          heroku container:push web -a $IMAGE_NAME --arg SECRET_KEY,DEBUG,ALLOWED_HOSTS,CORS_ALLOWED_ORIGINS,PAULSOFT_EMAIL_USER,PAULSOFT_EMAIL_PASSWORD,DATABASE_URL,EMAIL_VERIFICATION_URL
          heroku container:release web -a $IMAGE_NAME
